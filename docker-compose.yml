version: "3"

services:
  zookeeper:
    build: kafka
    image: zookeeper:kafka
    container_name: zookeeper_compose
    environment: 
        - KAFKA_ACTION=start-zk
    networks: 
      poke:
        ipv4_address: "10.100.0.22"
    ports:
      - "2181:2181"

  kafka:
    build: kafka
    image: server:kafka
    depends_on: 
      - zookeeper
    container_name: kafkaServer_compose
    environment: 
      - KAFKA_ACTION=start-kafka
    networks: 
      poke:
        ipv4_address: "10.100.0.23"
    ports: 
      - "9092:9092"
      - "9093:9093"
  
  bot1:
    build: docker_sd
    image: bot1:showdown
    container_name: bot1_compose
    depends_on: 
      - logstash
    networks: 
      poke:
        ipv4_address: "10.100.0.20"
    ports: 
      - "5000:5000"
    restart: always
    env_file: docker_sd/env_files/bot1.env
  
  logstash:
    build: logstash
    image: logstash:showdown
    container_name: logstash_compose
    depends_on: 
      - kafka
    networks: 
      poke:
        ipv4_address: "10.100.0.30"

  spark_showdown:
    build: spark
    image: spark:showdown
    container_name: spark_showdown
    depends_on: 
      - elasticsearch
    networks:
      - poke
    ports: 
      - "4040:4040"
    environment: 
      - "SPARK_ACTION=showdown"
    restart: on-failure
    volumes: 
      - shared_volume:/shared_data/

  # spark_dataframe:
  #   build: spark
  #   image: spark:showdown
  #   container_name: spark_dataframe
  #   depends_on: 
  #     - elasticsearch
  #   networks:
  #     - poke
  #   ports: 
  #     - "4041:4041"
  #   environment: 
  #     - "SPARK_ACTION=dataframe"
  #   restart: on-failure
  #   volumes: 
  #     - shared_volume:/shared_data/
      
  spark_training:
    build: spark
    image: spark:showdown
    container_name: spark_training
    depends_on: 
      - elasticsearch
      # - spark_dataframe
    networks:
      - poke
    ports: 
      - "4042:4042"
    environment: 
      - "SPARK_ACTION=training"
    volumes: 
      - shared_volume:/shared_data/
   
  elasticsearch:
    build: elasticsearch
    image: es:showdown
    container_name: elasticsearch_compose
    networks: 
      poke:
        ipv4_address: "10.100.0.51"
    ports: 
      - "9200:9200"
      - "9300:9300"
    environment: 
      - "discovery.type=single-node"
  
  kibana:
    build: kibana
    image: kibana:showdown
    container_name: kibana_compose
    networks: 
      poke:
        ipv4_address: "10.100.0.52"
    ports: 
      - "5601:5601"
  
networks: 
  poke:
    ipam:
      driver: default
      config: 
        - subnet: 10.100.0.0/24

volumes:
  shared_volume: